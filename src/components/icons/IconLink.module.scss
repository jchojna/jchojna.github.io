@import '../../styles/variables.scss';
@import '../../styles/mixins.scss';

.icon {
  @include flex-center;

  flex-direction: column;

  .link {
    @include flex-center;

    outline: none;
    position: relative;
    transition: background-color $button-hover, fill $button-hover;
    width: 50px;

    &::before {
      border-style: solid;
      border-width: 0;
      bottom: 0;
      content: '';
      left: 0;
      opacity: 0.6;
      position: absolute;
      right: 0;
      top: 0;
      transition: border-width $button-hover;
    }

    &:active::before {
      @include shadow;
    }

    @media only screen and (min-width: $media-md) {
      &:focus::before,
      &:hover::before {
        @include shadow;
      }
    }
  }

  .name {
    font-size: 10px;
    margin: 2px 0 4px;
    text-transform: uppercase;
    word-break: break-all;

    @media only screen and (min-width: $media-lg) {
      & {
        font-size: 0.75em;
      }
    }
  }

  .svg {
    width: 100%;

    &--faded1,
    &--faded2 {
      height: 100%;
      left: 0;
      opacity: 0.75;
      position: absolute;
      top: 0;
      width: 100%;
    }

    &--faded2 {
      opacity: 0.5;
    }
  }

  &.about {
    .link {
      background-color: rgba(
        $color: $color-about-dark,
        $alpha: $background-opacity
      );
      fill: $color-about-light;
      &::before {
        border-color: $color-about-shadow;
      }
      &:active {
        fill: $color-about;
        background-color: rgba(
          $color: $color-about-shadow,
          $alpha: $background-opacity
        );
      }
    }

    .name {
      color: $color-about-white;
    }
  }

  &.contact {
    .link {
      background-color: rgba(
        $color: $color-contact-dark,
        $alpha: $background-opacity
      );
      fill: $color-contact;
      &::before {
        border-color: $color-contact-shadow;
      }
      &:active {
        fill: $color-contact-light;
        background-color: rgba(
          $color: $color-contact-shadow,
          $alpha: $background-opacity
        );
      }
    }

    .name {
      color: $color-quotes-shadow;
    }
  }

  @media only screen and (min-width: $media-md) {
    &.about {
      .link {
        &::before {
          border-color: $color-about-shadow;
        }
        &:focus,
        &:hover {
          fill: $color-about;
          background-color: rgba(
            $color: $color-about-shadow,
            $alpha: $background-opacity
          );
        }
      }
    }

    &.contact {
      .link {
        &::before {
          border-color: $color-contact-shadow;
        }
        &:focus,
        &:hover {
          fill: $color-contact-light;
          background-color: rgba(
            $color: $color-contact-shadow,
            $alpha: $background-opacity
          );
        }
      }
    }
  }
}
